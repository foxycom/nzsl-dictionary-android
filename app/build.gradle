apply plugin: 'com.android.application'

// Load Jacoco Only if needed
if (jacocoEnabled.toBoolean()) {
    project.logger.lifecycle('Applying jacoco build file: jacoco.gradle')
    apply from: rootProject.file("jacoco.gradle")
}

// General switch for tests types this control report generation but not yet unit test selection - TODO Make this a flag
def carvedTests = project.hasProperty('carvedTests')// ? project.getProperty('carvedTests') : false //Default value false

def carvedTestSrcDir = "src/carvedTest"
def testReportPrefix = "${buildDir}/carvedTest/testExecution"
def coverageReportPrefix = "${buildDir}/carvedTest/coverage"

if (carvedTests) {
    if (project.hasProperty('testName')) {
        def testName = project.getProperty('testName')
        println ""
        println "* Processing Carved Test ${testName}"
        println ""

        carvedTestSrcDir = "src/carvedTest/${testName}"

        testReportPrefix = "${buildDir}/carvedTest/${testName}/testExecution"
        coverageReportPrefix = "${buildDir}/carvedTest/${testName}/coverage"
    }
}

android {
    compileSdkVersion 29

    sourceSets {
        test {
            if (carvedTests) {
                java.srcDirs = ["$carvedTestSrcDir"]
            }
        }
    }


    defaultConfig {
        applicationId "com.hewgill.android.nzsldict"
        minSdkVersion 23
        targetSdkVersion 29
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionCode 39
        versionName "39"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        beta {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            versionNameSuffix "-beta"
        }

        debug {
            debuggable true
            testCoverageEnabled jacocoEnabled.toBoolean()
        }
    }

    dependencies {
        implementation 'com.google.android.material:material:1.1.0'
        implementation 'io.github.inflationx:calligraphy3:3.1.1'
        implementation 'io.github.inflationx:viewpump:2.0.3'
        androidTestImplementation 'androidx.test:core:1.2.0'
        androidTestImplementation 'androidx.test.ext:junit:1.1.1'
        androidTestImplementation 'androidx.test:runner:1.2.0'
        androidTestImplementation 'androidx.test:rules:1.2.0'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
        androidTestImplementation 'androidx.test.espresso:espresso-web:3.2.0'
        androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }

        animationsDisabled true

        unitTests.all {

            // Nices output on the console/logs
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }

            test {
                //Get last path of default set path.
                def junitXmlTestTaskName = file("$reports.junitXml.destination").name
                def htmlTestTaskName = file("$reports.html.destination").name

                if (carvedTests) {
                    // Just use the same?
                    reports.junitXml.destination = file("$testReportPrefix/$junitXmlTestTaskName")
                    reports.html.destination = file("$testReportPrefix/$junitXmlTestTaskName")
                }

                filter {
                    //specific test method
                    if (project.hasProperty('carvedTestsFilter')){
                        includeTestsMatching project.carvedTestsFilter
                    }
                }
            }
        }
    }
}

dependencies {
    implementation 'com.google.android.material:material:1.1.0'
    testImplementation 'org.robolectric:robolectric:4.2'
    // testImplementation 'org.robolectric:robolectric:4.1'
    // testImplementation 'de.unipassau.abc:test-utils:1.0-SNAPSHOT'
    // testImplementation 'com.google.guava:guava:27.0.1-jre'
    testImplementation 'org.mockito:mockito-core:2.6.3'
    // androidTestCompile 'org.mockito:mockito-android:2.6.3'
    testImplementation 'androidx.test:core:1.3.0'

}

